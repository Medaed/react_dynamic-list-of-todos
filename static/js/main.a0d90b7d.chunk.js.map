{"version":3,"sources":["types/Filter.ts","components/TodoContext/TodoContext.tsx","components/TodoItems/TodoItems.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoContext","createContext","loading","setLoading","todos","setTodos","query","setQuery","filter","All","setFilter","activeTodo","setActiveTodo","TodoProvider","children","useState","value","Provider","TodoItems","todo","id","title","completed","useContext","className","cn","type","onClick","TodoList","map","TodoFilter","filters","name","Active","Completed","onChange","el","target","item","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","message","href","email","App","filteredItems","useMemo","todosCopy","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0d90b7d.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { createContext, useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\nimport { Context } from '../../types/TodoContext';\n\nexport const TodoContext = createContext<Context>({\n  loading: false,\n  setLoading: () => { },\n  todos: [],\n  setTodos: () => { },\n  query: '',\n  setQuery: () => { },\n  filter: Filter.All,\n  setFilter: () => { },\n  activeTodo: null,\n  setActiveTodo: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Filter.All);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n\n  const value = {\n    loading,\n    setLoading,\n    todos,\n    setTodos,\n    query,\n    setQuery,\n    filter,\n    setFilter,\n    activeTodo,\n    setActiveTodo,\n  };\n\n  return (\n    <TodoContext.Provider value={value}>{children}</TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../TodoContext/TodoContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItems: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const { activeTodo, setActiveTodo } = useContext(TodoContext);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={\n        cn({\n          'has-background-info-light': completed,\n        })\n      }\n\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed ? (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        ) : ''}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={`has-text-${completed ? 'success' : 'danger'}`}>\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setActiveTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={\n              `far ${activeTodo?.id === id ? 'fa-eye-slash' : 'fa-eye'}`\n            }\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItems } from '../TodoItems';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItems\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useContext } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { TodoContext } from '../TodoContext/TodoContext';\n\ntype Props = {};\n\nexport const TodoFilter: React.FC<Props> = () => {\n  const { query, setQuery, setFilter } = useContext(TodoContext);\n\n  const filters = [\n    { name: 'All', value: Filter.All },\n    { name: 'Active', value: Filter.Active },\n    { name: 'Completed', value: Filter.Completed },\n  ];\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={el => setFilter(el.target.value as Filter)}\n          >\n            {filters.map(item => (\n              <option key={item.value} value={item.value}>{item.name}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(el) => setQuery(el.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  activeTodo: Todo ;\n  setActiveTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ activeTodo, setActiveTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(activeTodo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, [activeTodo?.userId]);\n\n  const message = activeTodo?.completed ? 'Done' : 'Planned';\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={\n                `has-text-${activeTodo?.completed ? 'success' : 'danger'\n                }`\n              }\n              >\n                {message}\n              </strong>\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './app.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { TodoContext } from './components/TodoContext/TodoContext';\n\nexport const App: React.FC = () => {\n  const {\n    activeTodo,\n    setActiveTodo,\n    query,\n    filter,\n  } = useContext(TodoContext);\n\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        .finally(() => {\n          setLoading(false);\n        });\n    }, 500);\n  }, []);\n\n  const filteredItems = useMemo(() => {\n    let todosCopy = [...todos];\n\n    if (query) {\n      todosCopy = todosCopy\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    switch (filter) {\n      case Filter.Active:\n        todosCopy = todosCopy.filter(todo => !todo.completed);\n        break;\n      case Filter.Completed:\n        todosCopy = todosCopy.filter(todo => todo.completed);\n        break;\n      case Filter.All:\n      default:\n        break;\n    }\n\n    return todosCopy;\n  }, [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredItems}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && <TodoModal activeTodo={activeTodo} setActiveTodo={setActiveTodo} />}\n    </>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './components/TodoContext/TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}